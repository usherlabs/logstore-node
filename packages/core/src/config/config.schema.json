{
	"$id": "config.schema.json",
	"$schema": "http://json-schema.org/draft-07/schema#",
	"description": "Node configuration format",
	"type": "object",
	"additionalProperties": false,
	"properties": {
		"$schema": {
			"type": "string"
		},
		"logStoreClient": {
			"type": "object",
			"description": "LogStore Client configuration",
			"additionalProperties": true,
			"default": {}
		},
		"streamrClient": {
			"type": "object",
			"description": "Streamr Client configuration",
			"additionalProperties": true,
			"properties": {
				"auth": {
					"anyOf": [
						{
							"type": "object",
							"properties": {
								"privateKey": {
									"type": "string",
									"pattern": "^(0x)?[a-fA-F0-9]{64}$",
									"description": "Private key for authentication, in string format."
								}
							},
							"required": ["privateKey"]
						},
						{
							"type": "object",
							"properties": {
								"ethereum": {
									"type": "object",
									"description": "Ethereum object for Web3 provider-based authentication."
								}
							},
							"required": ["ethereum"]
						}
					]
				}
			},
			"default": {}
		},
		"plugins": {
			"type": "object",
			"description": "Plugin configurations",
			"additionalProperties": true,
			"default": {}
		},
		"mode": {
			"discriminator": {
				"propertyName": "type"
			},
			"type": "object",
			"required": ["type"],
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"enum": ["standalone"]
						},
						"topicsStream": {
							"type": "string",
							"description": "Stream ID for validation results from predefined processes."
						},
						"validationErrorsStream": {
							"type": "string",
							"description": "Stream ID for schema validation errors."
						},
						"trackedStreams": {
							"type": "array",
							"description": "Array of objects defining streams to track and the number of partitions they have.",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"partitions": {
										"type": "number"
									}
								},
								"required": ["id", "partitions"]
							}
						}
					},
					"required": ["type", "trackedStreams"]
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"enum": ["network"]
						}
					}
				}
			],
			"default": {
				"type": "standalone",
				"trackedStreams": []
			}
		},
		"httpServer": {
			"type": ["object"],
			"description": "HTTP server configuration",
			"default": {},
			"additionalProperties": false,
			"properties": {
				"port": {
					"$ref": "#/definitions/port",
					"description": "Port to start HTTP server on",
					"default": 7171
				},
				"sslCertificate": {
					"description": "Files to use for SSL",
					"type": "object",
					"required": ["certFileName", "privateKeyFileName"],
					"additionalProperties": false,
					"properties": {
						"certFileName": {
							"type": "string",
							"description": "Path of certificate file"
						},
						"privateKeyFileName": {
							"type": "string",
							"description": "Path of private key file"
						}
					}
				}
			}
		}
	},
	"definitions": {
		"port": {
			"type": "number",
			"minimum": 0,
			"maximum": 65353
		},
		"smartContractConfig": {
			"type": "object",
			"required": ["contractAddress", "jsonRpcProvider"],
			"additionalProperties": false,
			"properties": {
				"contractAddress": {
					"type": "string",
					"description": "Ethereum address of registry smart contract",
					"pattern": "^0x[a-fA-F0-9]{40}$"
				},
				"jsonRpcProvider": {
					"type": "string",
					"description": "URL for JSON RPC Provider",
					"format": "uri"
				}
			}
		}
	}
}
