name: Deploy Docker Image

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - develop

env:
  REGISTRY: ghcr.io

jobs:
  deploy:
    name: Deploy Docker Image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        if: ${{ !env.ACT }}
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

#      - name: Build image
#        run: |
#          docker build --platform linux/amd64 -t logstore-node -f ./Dockerfile --cache-from type=gha,scope=usherlabs/logstore-node --cache-to type=gha,mode=max,scope=usherlabs/logstore-node .

      - name: Create image name
        run: |
          # if master, tag as latest
          tag=latest
          # if not master, tag as branch name
          if [ $GITHUB_REF != 'refs/heads/master' ]; then
              tag=$(echo $GITHUB_REF | sed 's/refs\/heads\///' | sed 's/\//-/')
          fi
          image_name=${{ env.REGISTRY }}/usherlabs/logstore-node:$tag
          # save for next step
          echo "image_name=$image_name" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          # we push only if env.ACT is not set
          push: ${{ env.ACT == '' }}
          tags: ${{ env.image_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
